#
# Licensed to Jasig under one or more contributor license
# agreements. See the NOTICE file distributed with this work
# for additional information regarding copyright ownership.
# Jasig licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file
# except in compliance with the License.  You may obtain a
# copy of the License at the following location:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

cas.resources.dir=${user.home}/etc/cas
cas.log.dir=${user.home}/cas-log

##
# Unique CAS node name
# host.name is used to generate unique Service Ticket IDs and SAMLArtifacts.  This is usually set to the specific
# hostname of the machine running the CAS node, but it could be any label so long as it is unique in the cluster.
host.name=rdconnectcas.rd-connect.eu
server.protocol=https
server.port=9443
server.name=${server.protocol}://${host.name}:${server.port}
cas.context=/cas
server.prefix=${server.name}${cas.context}
# IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
cas.securityContext.status.allowedSubnet=127.0.0.1


cas.themeResolver.defaultThemeName=cas-theme-default
cas.viewResolver.basename=default_views

##
# Database flavors for Hibernate
#
# One of these is needed if you are storing Services or Tickets in an RDBMS via JPA.
#
# database.hibernate.dialect=org.hibernate.dialect.OracleDialect
# database.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
# database.hibernate.dialect=org.hibernate.dialect.HSQLDialect

##
# CAS Logout Behavior
# WEB-INF/cas-servlet.xml
#
# Specify whether CAS should redirect to the specified service parameter on /logout requests
# cas.logout.followServiceRedirects=false

##
# Single Sign-On Session Timeouts
# Defaults sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
#
# Maximum session timeout - TGT will expire in maxTimeToLiveInSeconds regardless of usage
# tgt.maxTimeToLiveInSeconds=28800
#
# Idle session timeout -  TGT will expire sooner than maxTimeToLiveInSeconds if no further requests
# for STs occur within timeToKillInSeconds
# tgt.timeToKillInSeconds=7200

##
# Service Ticket Timeout
# Default sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
#
# Service Ticket timeout - typically kept short as a control against replay attacks, default is 10s.  You'll want to
# increase this timeout if you are manually testing service ticket creation/validation via tamperdata or similar tools
# st.timeToKillInSeconds=10

##
# Single Logout Out Callbacks
# Default sourced from WEB-INF/spring-configuration/argumentExtractorsConfiguration.xml
#
# To turn off all back channel SLO requests set slo.disabled to true
# slo.callbacks.disabled=false

##
# Service Registry Periodic Reloading Scheduler
# Default sourced from WEB-INF/spring-configuration/applicationContext.xml
#
# Force a startup delay of 2 minutes.
# service.registry.quartz.reloader.startDelay=120000
#
# Reload services every 2 minutes
# service.registry.quartz.reloader.repeatInterval=120000

##
# Log4j
# Default sourced from WEB-INF/spring-configuration/log4jConfiguration.xml:
#
# It is often time helpful to externalize log4j.xml to a system path to preserve settings between upgrades.
# e.g. log4j.config.location=/etc/cas/log4j.xml
log4j.config.location=${cas.resources.dir}/log4j.xml
# log4j refresh interval in millis
log4j.refresh.interval=60000

##
# Password Policy
#
# Warn all users of expiration date regardless of warningDays value.
password.policy.warnAll=false

# Threshold number of days to begin displaying password expiration warnings.
password.policy.warningDays=30

# URL to which the user will be redirected to change the passsword.
password.policy.url=https://rdconnectcas.rd-connect.eu:9443/password/change




# == Basic database connection pool configuration ==
database.driverClass=org.sqlite.JDBC
database.url=jdbc:sqlite:${cas.resources.dir}/cas-users.sqlite
database.user=somebody
database.password=meaningless
database.pool.minSize=6
database.pool.maxSize=18
 
# Maximum amount of time to wait in ms for a connection to become
# available when the pool is exhausted
database.pool.maxWait=10000
 
# Amount of time in seconds after which idle connections
# in excess of minimum size are pruned.
database.pool.maxIdleTime=120
 
# Number of connections to obtain on pool exhaustion condition.
# The maximum pool size is always respected when acquiring
# new connections.
database.pool.acquireIncrement=6
 
# == Connection testing settings ==
 
# Period in s at which a health query will be issued on idle
# connections to determine connection liveliness.
database.pool.idleConnectionTestPeriod=30
 
# Query executed periodically to test health
database.pool.connectionHealthQuery=select 1
 
# == Database recovery settings ==
 
# Number of times to retry acquiring a _new_ connection
# when an error is encountered during acquisition.
database.pool.acquireRetryAttempts=5
 
# Amount of time in ms to wait between successive aquire retry attempts.
database.pool.acquireRetryDelay=2000


# These properties are needed to setup JPA (used by service management)
database.hibernate.dialect=org.hibernate.dialect.SQLiteDialect
database.hibernate.batchSize=30


# == General LDAP connection settings ==

# Search filter when using a search-and-bind strategy.
ldap.authn.searchFilter=sAMAccountName=%u

# Directory URL. Only one URL should be supplied.
# For deployments that need HA directory connections, hardware load balancing with a
# single virtual host is the only reasonable solution.
ldap.url=ldap://1.1.1.1
ldap.useSSL=false
ldap.useStartTLS=true


# Base DN for directory searches.
ldap.authn.baseDn=cn=users,dc=school,dc=edu

# Manager credentials to bind; only used for searches.
# Only required by directories that prevent anonymous queries (e.g. AD) when performing
# a search-and-bind authentication strategy.
ldap.managerDn=cn=manager,cn=users,dc=school,dc=edu
ldap.managerPassword=password

# Strongly recommended for AD.
ldap.authentication.ignorePartialResultException=true

ldap.connectTimeout=3000

# == Connection pooling settings ==

ldap.pool.minSize=3
ldap.pool.maxSize=10
ldap.pool.blockWaitTime=3000
# One of these three must be true
ldap.pool.validateOnCheckIn=false
ldap.pool.validateOnCheckOut=false
ldap.pool.validatePeriodically=true
ldap.pool.validatePeriod=1800

ldap.pool.prunePeriod=300
ldap.pool.idleTime=600

# Maximum time in ms to wait for connection to become available
# under pool exhausted condition.
ldap.authentication.pool.maxWait=10000

# == Evictor configuration ==

# Period in ms at which evictor process runs.
ldap.authentication.pool.evictionPeriod=600000

# Maximum time in ms at which connections can remain idle before
# they become liable to eviction.
ldap.pool.idleTime=1200000

ldap.trustedCert=



# CAS management webapp configuration
# hosts and urls
# CAS
cas.host=${server.name}
cas.prefix=${server.prefix}
cas.securityContext.casProcessingFilterEntryPoint.loginUrl=${cas.prefix}/login
cas.securityContext.ticketValidator.casServerUrlPrefix=${cas.prefix}
# Management
cas-management.host=${server.name}
cas-management.context=/cas-management
cas-management.prefix=${cas-management.host}${cas-management.context}
cas-management.securityContext.serviceProperties.service=${cas-management.prefix}/j_spring_cas_security_check
cas-management.securityContext.serviceProperties.adminRoles=ROLE_ADMIN

# views
cas-management.viewResolver.basename=default_views


