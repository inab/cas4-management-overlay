#####
# Remember, all the properties from registered cas prefixes are validated.
# So, we have to create properties in custom prefixes like "custom." ,
# instead of starting with "mgmt." or similar, as unkown keys are rejected.
#####
# https://apereo.github.io/cas-management/5.3.x/installation/Configuration-Properties.html
# https://groups.google.com/a/apereo.org/forum/#!topic/cas-user/3znnll3K4Y8

# unofficial keys
custom.domainName=rd-connect.eu
custom.hostName=rdconnectcas.${custom.domainName}
custom.serverProtocol=https
custom.serverPort=9443
custom.context=/cas
# /unofficial keys
mgmt.serverName=${custom.serverProtocol}://${custom.hostName}:${custom.serverPort}
# Commented meanwhile it is fixed the bug
cas.server.name=${mgmt.serverName}
cas.server.prefix=${mgmt.serverName}${custom.context}

mgmt.adminRoles[0]=ROLE_ADMIN
mgmt.userPropertiesFile=file:${custom.resourcesDir}/users.properties

server.context-path=/cas-management
server.port=${custom.serverPort}

mgmt.authzAttributes[0]=memberOf

authn.attributeRepository.attributes.uid=uid
authn.attributeRepository.attributes.memberOf=memberOf
authn.attributeRepository.attributes.dn=distinguishedName
authn.attributeRepository.attributes.mail=email
authn.attributeRepository.attributes.cn=fullname
authn.attributeRepository.attributes.givenName=givenname
authn.attributeRepository.attributes.sn=surname
authn.attributeRepository.attributes.disabledAccount=isDisabled
authn.attributeRepository.attributes.userClass=userCategory


######################
# LDAP Authorization #
######################
# https://apereo.github.io/cas-management/5.3.x/installation/Configuration-Properties.html#ldap-authorization

# Enable authorization based on groups
mgmt.ldap.ldapAuthz.groupAttribute=cn
#mgmt.ldap.ldapAuthz.groupPrefix=ROLE_
mgmt.ldap.ldapAuthz.groupFilter=(&(cn=admin)(member={0}))
mgmt.ldap.ldapAuthz.groupBaseDn=ou=groups,dc=rd-connect,dc=eu

# Enable authorization based on attributes and roles
#mgmt.ldap.ldapAuthz.rolePrefix=ROLE_
mgmt.ldap.ldapAuthz.roleAttribute=memberOf

mgmt.ldap.ldapAuthz.searchFilter=(&(|(uid={0})(mail={0}))(disabledAccount=FALSE)(acceptedGDPR=*)(!(acceptedGDPR=GDPR)))
mgmt.ldap.ldapAuthz.baseDn=ou=people,dc=rd-connect,dc=eu

######################################
# LDAP Storage of service management #
######################################
# https://apereo.github.io/cas-management/5.3.x/installation/Configuration-Properties.html#ldap

mgmt.ldap.ldapUrl=ldaps://ldap.${custom.domainName}
mgmt.ldap.useSsl=true
mgmt.ldap.useStartTls=false
# Manager credentials to bind; used for searches and updates.
mgmt.ldap.bindDn=cn=admin,dc=rd-connect,dc=eu
# Change this fake password by the real one used in the setup environment
mgmt.ldap.bindCredential=ChangeIt!!!

mgmt.ldap.allowMultipleDns=false

# == Connection pooling settings ==
mgmt.ldap.minPoolSize=0
mgmt.ldap.maxPoolSize=10
mgmt.ldap.blockWaitTime=PT3S
mgmt.ldap.validateOnCheckout=false
mgmt.ldap.validatePeriodically=true
mgmt.ldap.validatePeriod=PT5M
mgmt.ldap.prunePeriod=PT2H
mgmt.ldap.idleTime=PT10M

mgmt.ldap.trustCertificates=file:${custom.resourcesDir}/cacert.pem



# mgmt.ldap.connectionStrategy=
# mgmt.ldap.providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider
# mgmt.ldap.connectTimeout=5000
# mgmt.ldap.keystore=
# mgmt.ldap.keystorePassword=
# mgmt.ldap.keystoreType=JKS|JCEKS|PKCS12
# mgmt.ldap.poolPassivator=NONE|CLOSE|BIND
# mgmt.ldap.validateTimeout=5000
# mgmt.ldap.failFast=true
# mgmt.ldap.idleTime=500

logging.config=file:${custom.resourcesDir}/log4j2-management.xml
